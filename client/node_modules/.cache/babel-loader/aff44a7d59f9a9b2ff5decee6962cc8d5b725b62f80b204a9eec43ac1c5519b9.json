{"ast":null,"code":"// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5000/todos';\n\n// export const getTodos = async () => {\n//     const response = await axios.get(\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\");\n//     return response.data;\n// };\n\n// export const createTodo = async (todo) => {\n//     const response = await axios.post(\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\", todo);\n//     return response.data;\n// };\n\n// export const updateTodo = async (id, updatedTodo) => {\n//     const response = await axios.put(`${\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\"}/${\t\n//        \" 6662ffe17df0dbc17cc7c1c7\"}`, updatedTodo);\n//     return response.data;\n// };\n\n// export const deleteTodo = async (id) => {\n//     const response = await axios.delete(`${\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\"}/${\t\n//        \" 6662ffe17df0dbc17cc7c1c7\"}`);\n//     return response.data;\n// };\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/todos';\nconst API_KEY = 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'; // Replace with your actual API key\n\n// Function to get all todos\nexport const getTodos = async () => {\n  const response = await axios.post(`${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/find`, {\n    dataSource: 'ClusterTODO',\n    database: 'TODO-Database',\n    collection: 'TODO',\n    filter: {}\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\n    }\n  });\n  return response.data.documents;\n};\n\n// Function to create a new todo\nexport const createTodo = async todo => {\n  const response = await axios.post(`${'http://localhost:5000/todos'}/insertOne`, {\n    dataSource: 'ClusterTODO',\n    database: 'TODO-Database',\n    collection: 'TODO',\n    document: todo\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\n    }\n  });\n  console.log(response.data);\n  return response.data;\n};\n\n// Function to update a todo\nexport const updateTodo = async (id, updatedTodo) => {\n  const response = await axios.post(`${'http://localhost:5000/todos'}/updateOne`, {\n    dataSource: 'ClusterTODO',\n    database: 'TODO-Database',\n    collection: 'TODO',\n    filter: {\n      _id: {\n        $oid: id\n      }\n    },\n    update: {\n      $set: updatedTodo\n    }\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\n    }\n  });\n  return response.data;\n};\n\n// Function to delete a todo\nexport const deleteTodo = async id => {\n  const response = await axios.post(`${'http://localhost:5000/todos'}/deleteOne`, {\n    dataSource: 'ClusterTODO',\n    database: 'TODO-Database',\n    collection: 'TODO',\n    filter: {\n      _id: {\n        $oid: id\n      }\n    }\n  }, {\n    headers: {\n      'Content-Type': 'application/json',\n      'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\n    }\n  });\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","API_KEY","getTodos","response","post","dataSource","database","collection","filter","headers","data","documents","createTodo","todo","document","console","log","updateTodo","id","updatedTodo","_id","$oid","update","$set","deleteTodo"],"sources":["C:/Users/SHRIJAN SAHU/Desktop/TODO List/todo-app/client/src/services/todoService.js"],"sourcesContent":["// import axios from 'axios';\r\n\r\n// const API_URL = 'http://localhost:5000/todos';\r\n\r\n// export const getTodos = async () => {\r\n//     const response = await axios.get(\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\");\r\n//     return response.data;\r\n// };\r\n\r\n// export const createTodo = async (todo) => {\r\n//     const response = await axios.post(\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\", todo);\r\n//     return response.data;\r\n// };\r\n\r\n// export const updateTodo = async (id, updatedTodo) => {\r\n//     const response = await axios.put(`${\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\"}/${\t\r\n//        \" 6662ffe17df0dbc17cc7c1c7\"}`, updatedTodo);\r\n//     return response.data;\r\n// };\r\n\r\n// export const deleteTodo = async (id) => {\r\n//     const response = await axios.delete(`${\"https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1\"}/${\t\r\n//        \" 6662ffe17df0dbc17cc7c1c7\"}`);\r\n//     return response.data;\r\n// };\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/todos';\r\nconst API_KEY = 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ';  // Replace with your actual API key\r\n\r\n// Function to get all todos\r\nexport const getTodos = async () => {\r\n   \r\n    const response = await axios.post(\r\n        `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/find`,\r\n        {\r\n            dataSource: 'ClusterTODO',\r\n            database: 'TODO-Database',\r\n            collection: 'TODO',\r\n            filter: {}\r\n        },\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\r\n            }\r\n        }\r\n    );\r\n    return response.data.documents;\r\n};\r\n\r\n// Function to create a new todo\r\nexport const createTodo = async (todo) => {\r\n    const response = await axios.post(\r\n        `${'http://localhost:5000/todos'}/insertOne`,\r\n        {\r\n            dataSource: 'ClusterTODO',\r\n            database: 'TODO-Database',\r\n            collection: 'TODO',\r\n            document: todo\r\n        },\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\r\n            }\r\n        }\r\n    );\r\n    console.log(response.data);\r\n    return response.data;\r\n};\r\n\r\n// Function to update a todo\r\nexport const updateTodo = async (id, updatedTodo) => {\r\n    const response = await axios.post(\r\n        `${'http://localhost:5000/todos'}/updateOne`,\r\n        {\r\n            dataSource: 'ClusterTODO',\r\n            database: 'TODO-Database',\r\n            collection: 'TODO',\r\n            filter: { _id: { $oid: id } },\r\n            update: {\r\n                $set: updatedTodo\r\n            }\r\n        },\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\r\n            }\r\n        }\r\n    );\r\n    return response.data;\r\n};\r\n\r\n// Function to delete a todo\r\nexport const deleteTodo = async (id) => {\r\n    const response = await axios.post(\r\n        `${'http://localhost:5000/todos'}/deleteOne`,\r\n        {\r\n            dataSource: 'ClusterTODO',\r\n            database: 'TODO-Database',\r\n            collection: 'TODO',\r\n            filter: { _id: { $oid: id } }\r\n        },\r\n        {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'api-key': 'TxYnmmwKRjTheylue5pfVA2OoVksiAgSn13WoavqoSoyXSu8IYUaXRu9RqlK3GbJ'\r\n            }\r\n        }\r\n    );\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B;AAC7C,MAAMC,OAAO,GAAG,kEAAkE,CAAC,CAAE;;AAErF;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAEhC,MAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC7B,GAAG,+EAA+E,OAAO,EACzF;IACIC,UAAU,EAAE,aAAa;IACzBC,QAAQ,EAAE,eAAe;IACzBC,UAAU,EAAE,MAAM;IAClBC,MAAM,EAAE,CAAC;EACb,CAAC,EACD;IACIC,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,SAAS,EAAE;IACf;EACJ,CACJ,CAAC;EACD,OAAON,QAAQ,CAACO,IAAI,CAACC,SAAS;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAMV,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC7B,GAAG,6BAA6B,YAAY,EAC5C;IACIC,UAAU,EAAE,aAAa;IACzBC,QAAQ,EAAE,eAAe;IACzBC,UAAU,EAAE,MAAM;IAClBO,QAAQ,EAAED;EACd,CAAC,EACD;IACIJ,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,SAAS,EAAE;IACf;EACJ,CACJ,CAAC;EACDM,OAAO,CAACC,GAAG,CAACb,QAAQ,CAACO,IAAI,CAAC;EAC1B,OAAOP,QAAQ,CAACO,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;EACjD,MAAMhB,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC7B,GAAG,6BAA6B,YAAY,EAC5C;IACIC,UAAU,EAAE,aAAa;IACzBC,QAAQ,EAAE,eAAe;IACzBC,UAAU,EAAE,MAAM;IAClBC,MAAM,EAAE;MAAEY,GAAG,EAAE;QAAEC,IAAI,EAAEH;MAAG;IAAE,CAAC;IAC7BI,MAAM,EAAE;MACJC,IAAI,EAAEJ;IACV;EACJ,CAAC,EACD;IACIV,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,SAAS,EAAE;IACf;EACJ,CACJ,CAAC;EACD,OAAON,QAAQ,CAACO,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMc,UAAU,GAAG,MAAON,EAAE,IAAK;EACpC,MAAMf,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAC7B,GAAG,6BAA6B,YAAY,EAC5C;IACIC,UAAU,EAAE,aAAa;IACzBC,QAAQ,EAAE,eAAe;IACzBC,UAAU,EAAE,MAAM;IAClBC,MAAM,EAAE;MAAEY,GAAG,EAAE;QAAEC,IAAI,EAAEH;MAAG;IAAE;EAChC,CAAC,EACD;IACIT,OAAO,EAAE;MACL,cAAc,EAAE,kBAAkB;MAClC,SAAS,EAAE;IACf;EACJ,CACJ,CAAC;EACD,OAAON,QAAQ,CAACO,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
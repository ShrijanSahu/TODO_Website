{"ast":null,"code":"// import axios from 'axios';\n\n// const API_URL = 'http://localhost:5000/';\n\n// export const getTodos = async () => {\n//     const response = await axios.get(\"http://localhost:5000/get\");\n//     return response.data;\n// };\n\n// export const createTodo = async (todo) => {\n//     const response = await axios.post(\"http://localhost:5000/post\", todo);\n//     return response.data;\n// };\n\n// export const updateTodo = async (id, updatedTodo) => {\n//     const response = await axios.put(`${\"http://localhost:5000/put\"}/${\t\n//        _id}`, updatedTodo);\n//     return response.data;\n// };\n\n// export const deleteTodo = async (id) => {\n//     const response = await axios.delete(`${\"http://localhost:5000/delete\"}/${\t\n//        _id}`);\n//     return response.data;\n// };\n\n// import axios from 'axios';\n\n// const API_URL = 'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1';\n// const API_KEY = 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09';  // Replace with your actual API key\n\n// // Function to get all todos\n// export const getTodos = async () => {\n\n//     const response = await axios.post(\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/find`,\n//         {\n//             dataSource: 'ClusterTODO',\n//             database: 'TODO-Database',\n//             collection: 'TODO',\n//             filter: {}\n//         },\n//         {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\n//             }\n//         }\n//     );\n//     return response.data.documents;\n// };\n\n// // Function to create a new todo\n// export const createTodo = async (todo) => {\n//     const response = await axios.post(\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/insertOne`,\n//         {\n//             dataSource: 'ClusterTODO',\n//             database: 'TODO-Database',\n//             collection: 'TODO',\n//             document: todo\n//         },\n//         {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\n//             }\n//         }\n//     );\n//     console.log(response.data);\n//     return response.data;\n// };\n\n// // Function to update a todo\n// export const updateTodo = async (id, updatedTodo) => {\n//     const response = await axios.post(\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/updateOne`,\n//         {\n//             dataSource: 'ClusterTODO',\n//             database: 'TODO-Database',\n//             collection: 'TODO',\n//             filter: { _id: { $oid: id } },\n//             update: {\n//                 $set: updatedTodo\n//             }\n//         },\n//         {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\n//             }\n//         }\n//     );\n//     return response.data;\n// };\n\n// // Function to delete a todo\n// export const deleteTodo = async (id) => {\n//     const response = await axios.post(\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/deleteOne`,\n//         {\n//             dataSource: 'ClusterTODO',\n//             database: 'TODO-Database',\n//             collection: 'TODO',\n//             filter: { _id: { $oid: id } }\n//         },\n//         {\n//             headers: {\n//                 'Content-Type': 'application/json',\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\n//             }\n//         }\n//     );\n//     return response.data;\n// };\n\nimport axios from 'axios';\nconst API_URL = 'http://localhost:5000/todos';\n\n// Function to get all todos\nexport const getTodos = async () => {\n  const response = await axios.get(`${'http://localhost:5000/todos'}/get`);\n  return response.data;\n};\n\n// Function to create a new todo\nexport const createTodo = async todo => {\n  const response = await axios.post(`${'http://localhost:5000/todos'}/post`, todo);\n  return response.data;\n};\n\n// Function to update a todo\nexport const updateTodo = async (id, updatedTodo) => {\n  const response = await axios.put(`${'http://localhost:5000/todos'}/${id}/put`, updatedTodo);\n  return response.data;\n};\n\n// Function to delete a todo\nexport const deleteTodo = async id => {\n  const response = await axios.delete(`${'http://localhost:5000/todos'}/${id}/delete`);\n  return response.data;\n};","map":{"version":3,"names":["axios","API_URL","getTodos","response","get","data","createTodo","todo","post","updateTodo","id","updatedTodo","put","deleteTodo","delete"],"sources":["C:/Users/SHRIJAN SAHU/Desktop/TODO List/todo-app/client/src/services/todoService.js"],"sourcesContent":["// import axios from 'axios';\r\n\r\n// const API_URL = 'http://localhost:5000/';\r\n\r\n// export const getTodos = async () => {\r\n//     const response = await axios.get(\"http://localhost:5000/get\");\r\n//     return response.data;\r\n// };\r\n\r\n// export const createTodo = async (todo) => {\r\n//     const response = await axios.post(\"http://localhost:5000/post\", todo);\r\n//     return response.data;\r\n// };\r\n\r\n// export const updateTodo = async (id, updatedTodo) => {\r\n//     const response = await axios.put(`${\"http://localhost:5000/put\"}/${\t\r\n//        _id}`, updatedTodo);\r\n//     return response.data;\r\n// };\r\n\r\n// export const deleteTodo = async (id) => {\r\n//     const response = await axios.delete(`${\"http://localhost:5000/delete\"}/${\t\r\n//        _id}`);\r\n//     return response.data;\r\n// };\r\n\r\n\r\n\r\n\r\n// import axios from 'axios';\r\n\r\n// const API_URL = 'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1';\r\n// const API_KEY = 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09';  // Replace with your actual API key\r\n\r\n// // Function to get all todos\r\n// export const getTodos = async () => {\r\n   \r\n//     const response = await axios.post(\r\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/find`,\r\n//         {\r\n//             dataSource: 'ClusterTODO',\r\n//             database: 'TODO-Database',\r\n//             collection: 'TODO',\r\n//             filter: {}\r\n//         },\r\n//         {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\r\n//             }\r\n//         }\r\n//     );\r\n//     return response.data.documents;\r\n// };\r\n\r\n// // Function to create a new todo\r\n// export const createTodo = async (todo) => {\r\n//     const response = await axios.post(\r\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/insertOne`,\r\n//         {\r\n//             dataSource: 'ClusterTODO',\r\n//             database: 'TODO-Database',\r\n//             collection: 'TODO',\r\n//             document: todo\r\n//         },\r\n//         {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\r\n//             }\r\n//         }\r\n//     );\r\n//     console.log(response.data);\r\n//     return response.data;\r\n// };\r\n\r\n// // Function to update a todo\r\n// export const updateTodo = async (id, updatedTodo) => {\r\n//     const response = await axios.post(\r\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/updateOne`,\r\n//         {\r\n//             dataSource: 'ClusterTODO',\r\n//             database: 'TODO-Database',\r\n//             collection: 'TODO',\r\n//             filter: { _id: { $oid: id } },\r\n//             update: {\r\n//                 $set: updatedTodo\r\n//             }\r\n//         },\r\n//         {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\r\n//             }\r\n//         }\r\n//     );\r\n//     return response.data;\r\n// };\r\n\r\n// // Function to delete a todo\r\n// export const deleteTodo = async (id) => {\r\n//     const response = await axios.post(\r\n//         `${'https://ap-south-1.aws.data.mongodb-api.com/app/data-msbfigv/endpoint/data/v1'}/deleteOne`,\r\n//         {\r\n//             dataSource: 'ClusterTODO',\r\n//             database: 'TODO-Database',\r\n//             collection: 'TODO',\r\n//             filter: { _id: { $oid: id } }\r\n//         },\r\n//         {\r\n//             headers: {\r\n//                 'Content-Type': 'application/json',\r\n//                 'api-key': 'wImtr0zKKIP4N9OeTC0rteDbRPTULrpQHiwc1IVPyOpSZcYTQkYFgP4emzgq0Q09'\r\n//             }\r\n//         }\r\n//     );\r\n//     return response.data;\r\n// };\r\n\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/todos';\r\n\r\n// Function to get all todos\r\nexport const getTodos = async () => {\r\n    const response = await axios.get(`${'http://localhost:5000/todos'}/get`);\r\n    return response.data;\r\n};\r\n\r\n// Function to create a new todo\r\nexport const createTodo = async (todo) => {\r\n    const response = await axios.post(`${'http://localhost:5000/todos'}/post`, todo);\r\n    return response.data;\r\n};\r\n\r\n// Function to update a todo\r\nexport const updateTodo = async (id, updatedTodo) => {\r\n    const response = await axios.put(`${'http://localhost:5000/todos'}/${id}/put`, updatedTodo);\r\n    return response.data;\r\n};\r\n\r\n// Function to delete a todo\r\nexport const deleteTodo = async (id) => {\r\n    const response = await axios.delete(`${'http://localhost:5000/todos'}/${id}/delete`);\r\n    return response.data;\r\n};\r\n"],"mappings":"AAAA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAKA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B;;AAE7C;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAG,6BAA6B,MAAM,CAAC;EACxE,OAAOD,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACtC,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAAC,GAAG,6BAA6B,OAAO,EAAED,IAAI,CAAC;EAChF,OAAOJ,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMI,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;EACjD,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,GAAG,CAAC,GAAG,6BAA6B,IAAIF,EAAE,MAAM,EAAEC,WAAW,CAAC;EAC3F,OAAOR,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMQ,UAAU,GAAG,MAAOH,EAAE,IAAK;EACpC,MAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACc,MAAM,CAAC,GAAG,6BAA6B,IAAIJ,EAAE,SAAS,CAAC;EACpF,OAAOP,QAAQ,CAACE,IAAI;AACxB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
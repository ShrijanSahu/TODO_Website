{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHRIJAN SAHU\\\\Desktop\\\\TODO List\\\\todo-app\\\\client\\\\src\\\\components\\\\TodoList\\\\TodoList.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { deleteTodo, updateTodo } from '../services/todoService';\n\n// const TodoList = ({ todos, fetchTodos }) => {\n//     const [isEditing, setIsEditing] = useState(null);\n//     const [editTitle, setEditTitle] = useState('');\n//     const [editDescription, setEditDescription] = useState('');\n\n//     const handleDelete = async (id) => {\n//         await deleteTodo(id);\n//         fetchTodos();\n//     };\n\n//     const handleEdit = (todo) => {\n//         setIsEditing(todo._id);\n//         setEditTitle(todo.title);\n//         setEditDescription(todo.description);\n//     };\n\n//     const handleUpdate = async (id) => {\n//         await updateTodo(id, { title: editTitle, description: editDescription });\n//         setIsEditing(null);\n//         fetchTodos();\n//     };\n\n//     return (\n//         <div>\n//             <ul>\n//                 {todos.map(todo => (\n//                     <li key={todo._id}>\n//                         {isEditing === todo._id ? (\n//                             <div>\n//                                 <input \n//                                     type=\"text\" \n//                                     value={editTitle} \n//                                     onChange={(e) => setEditTitle(e.target.value)} \n//                                 />\n//                                 <textarea \n//                                     value={editDescription} \n//                                     onChange={(e) => setEditDescription(e.target.value)} \n//                                 ></textarea>\n//                                 <button onClick={() => handleUpdate(todo._id)}>Update</button>\n//                             </div>\n//                         ) : (\n//                             <div>\n//                                 <h3>{todo.title}</h3>\n//                                 <p>{todo.description}</p>\n//                                 <button onClick={() => handleEdit(todo)}>Edit</button>\n//                                 <button onClick={() => handleDelete(todo._id)}>Delete</button>\n//                             </div>\n//                         )}\n//                     </li>\n//                 ))}\n//             </ul>\n//         </div>\n//     );\n// };\n\n// export default TodoList;\n\nimport React, { useState, useEffect } from 'react';\nimport { getTodos, deleteTodo, updateTodo } from '../../services/todoService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [isEditing, setIsEditing] = useState(null);\n  const [editTitle, setEditTitle] = useState('');\n  const [editDescription, setEditDescription] = useState('');\n  const fetchTodos = async () => {\n    const todos = await getTodos();\n    setTodos(todos);\n  };\n  const handleDelete = async id => {\n    await deleteTodo(id);\n    fetchTodos();\n  };\n  const handleEdit = todo => {\n    setIsEditing(todo._id);\n    setEditTitle(todo.title);\n    setEditDescription(todo.description);\n  };\n  const handleUpdate = async id => {\n    await updateTodo(id, {\n      title: editTitle,\n      description: editDescription\n    });\n    setIsEditing(null);\n    fetchTodos();\n  };\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: isEditing === todo._id ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editTitle,\n            onChange: e => setEditTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              value: editDescription,\n              onChange: e => setEditDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(todo._id),\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: todo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: todo.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"EDButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(todo),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(todo._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this)\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"DWmIXUnTp1z7mG1bI4rpfaY7Mi4=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","getTodos","deleteTodo","updateTodo","jsxDEV","_jsxDEV","TodoList","_s","todos","setTodos","isEditing","setIsEditing","editTitle","setEditTitle","editDescription","setEditDescription","fetchTodos","handleDelete","id","handleEdit","todo","_id","title","description","handleUpdate","children","map","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","$RefreshReg$"],"sources":["C:/Users/SHRIJAN SAHU/Desktop/TODO List/todo-app/client/src/components/TodoList/TodoList.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { deleteTodo, updateTodo } from '../services/todoService';\r\n\r\n// const TodoList = ({ todos, fetchTodos }) => {\r\n//     const [isEditing, setIsEditing] = useState(null);\r\n//     const [editTitle, setEditTitle] = useState('');\r\n//     const [editDescription, setEditDescription] = useState('');\r\n\r\n//     const handleDelete = async (id) => {\r\n//         await deleteTodo(id);\r\n//         fetchTodos();\r\n//     };\r\n\r\n//     const handleEdit = (todo) => {\r\n//         setIsEditing(todo._id);\r\n//         setEditTitle(todo.title);\r\n//         setEditDescription(todo.description);\r\n//     };\r\n\r\n//     const handleUpdate = async (id) => {\r\n//         await updateTodo(id, { title: editTitle, description: editDescription });\r\n//         setIsEditing(null);\r\n//         fetchTodos();\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <ul>\r\n//                 {todos.map(todo => (\r\n//                     <li key={todo._id}>\r\n//                         {isEditing === todo._id ? (\r\n//                             <div>\r\n//                                 <input \r\n//                                     type=\"text\" \r\n//                                     value={editTitle} \r\n//                                     onChange={(e) => setEditTitle(e.target.value)} \r\n//                                 />\r\n//                                 <textarea \r\n//                                     value={editDescription} \r\n//                                     onChange={(e) => setEditDescription(e.target.value)} \r\n//                                 ></textarea>\r\n//                                 <button onClick={() => handleUpdate(todo._id)}>Update</button>\r\n//                             </div>\r\n//                         ) : (\r\n//                             <div>\r\n//                                 <h3>{todo.title}</h3>\r\n//                                 <p>{todo.description}</p>\r\n//                                 <button onClick={() => handleEdit(todo)}>Edit</button>\r\n//                                 <button onClick={() => handleDelete(todo._id)}>Delete</button>\r\n//                             </div>\r\n//                         )}\r\n//                     </li>\r\n//                 ))}\r\n//             </ul>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default TodoList;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getTodos, deleteTodo, updateTodo } from '../../services/todoService';\r\n\r\nconst TodoList = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    const [isEditing, setIsEditing] = useState(null);\r\n    const [editTitle, setEditTitle] = useState('');\r\n    const [editDescription, setEditDescription] = useState('');\r\n\r\n    const fetchTodos = async () => {\r\n        const todos = await getTodos();\r\n        setTodos(todos);\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        await deleteTodo(id);\r\n        fetchTodos();\r\n    };\r\n\r\n    const handleEdit = (todo) => {\r\n        setIsEditing(todo._id);\r\n        setEditTitle(todo.title);\r\n        setEditDescription(todo.description);\r\n    };\r\n\r\n    const handleUpdate = async (id) => {\r\n        await updateTodo(id, { title: editTitle, description: editDescription });\r\n        setIsEditing(null);\r\n        fetchTodos();\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchTodos();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {todos.map(todo => (\r\n                    <li key={todo._id}>\r\n                        {isEditing === todo._id ? (\r\n                            <div>\r\n                                <input \r\n                                    type=\"text\" \r\n                                    value={editTitle} \r\n                                    onChange={(e) => setEditTitle(e.target.value)} \r\n                                />\r\n                                <div>\r\n                                    <textarea \r\n                                    value={editDescription} \r\n                                    onChange={(e) => setEditDescription(e.target.value)} \r\n                                ></textarea>\r\n                                <button onClick={() => handleUpdate(todo._id)}>Update</button>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        ) : (\r\n                            <div>\r\n                                <h3>{todo.title}</h3>\r\n                                <p>{todo.description}</p>\r\n                                <div className = \"EDButton\">\r\n                                    <button onClick={() => handleEdit(todo)}>Edit</button>\r\n                                    <button onClick={() => handleDelete(todo._id)}>Delete</button>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        )}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}